apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$project.rootDir/tools/pmd.gradle"
apply from: "$project.rootDir/tools/findbugs.gradle"
apply from: "$project.rootDir/tools/checkstyle.gradle"
apply from: "$project.rootDir/tools/jacoco.gradle"


// Get keys from file not contained in git
def getProps(String propName) {
    def propsFile = rootProject.file('secrets.properties')
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        return props[propName]
    } else {
        return ""
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "com.aquamorph.frcmanager"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 18
        versionName "1.1.2"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        buildConfigField("String", "TBA_KEY", getProps("TBA_KEY"))
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "APP_DEBUG", "true"
        }
        release {
            testCoverageEnabled false
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "boolean", "APP_DEBUG", "false"
        }

    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        test.java.srcDirs += 'src/test/kotlin'
        androidTest.java.srcDirs += 'src/androidTest/kotlin'
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'org.assertj:assertj-core:1.7.1'
    testImplementation 'junit:junit:4.12'
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:animated-vector-drawable:27.1.0'
    implementation 'com.android.support:support-v13:27.1.0'
    implementation 'com.android.support:recyclerview-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support:cardview-v7:27.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.github.apl-devs:appintro:v4.2.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    // Android runner and rules support
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test:rules:1.0.1'

    // Espresso support
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // add this for intent mocking support
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.1'

    // add this for webview testing support
    androidTestImplementation 'com.android.support.test.espresso:espresso-web:3.0.1'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

